compilation_database_dir: .

# Where to put the generated .puml file(s)
output_directory: docs

# Generate method arguments (none/abbreviated/full)
generate_method_arguments: abbreviated

# Generate packages using C++ namespaces
generate_packages: true
package_type: namespace
generate_links:
  link: "https://github.com/ExoSpaceLabs/CCSDSPack/blob/develop/{{ element.source.path }}#L{{ element.source.line }}"
  tooltip: "{{ element.name }}"

# Define the diagrams
diagrams:
  ccsds_packet:
    type: class
    glob:
      - inc/CCSDSPacket.h
      - inc/CCSDSHeader.h
      - inc/CCSDSResult.h
      - src/CCSDSPacket.cpp
      - src/CCSDSHeader.cpp
    exclude:
      namespaces:
        - std
      access:
        - private
    plantuml:
      before:
        - 'title CCSDS::Packet UML Diagram'
  ccsds_data_field:
    type: class
    glob:
      - inc/CCSDSDataField.h
      - src/CCSDSDataField.cpp
      - inc/CCSDSResult.h
      - inc/CCSDSSecondaryHeaderAbstract.h
      - inc/CCSDSSecondaryHeaderFactory.h
      - inc/PusServices.h
      - src/PusServices.cpp
    exclude:
      namespaces:
        - std
      access:
        - private
    plantuml:
      before:
        - 'title CCSDS::DataField UML Diagram'

  ccsds_manager:
    type: class
    glob:
      - inc/CCSDSManager.h
      - src/CCSDSManager.cpp
      - inc/CCSDSResult.h
      - inc/CCSDSPacket.h
      - src/CCSDSPacket.cpp
      - inc/CCSDSValidator.h
      - src/CCSDSValidator.h
    exclude:
      namespaces:
        - std
      access:
        - private
    plantuml:
      before:
        - 'title CCSDS::Manager UML Diagram'
#  ccsds_tester:
#    type: class
#    glob:
#      - test/inc/*.h
#      - test/src/*.cpp
#    exclude:
#      namespaces:
#        - std
#      # Optional: exclude private members to declutter
#      access:
#        - private
#    plantuml:
#      before:
#        - 'title CCSDSPack Tester UML Diagram'